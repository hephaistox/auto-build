#+title: auto-build
#+author: Anthony CAUMOND
# See full fledge org example here https://github.com/fniessen/refcard-org-mode/blob/master/README.org?plain=1

[[https://github.com/hephaistox/auto-build/actions/workflows/commit_validation.yml][https://github.com/hephaistox/auto-build/actions/workflows/commit_validation.yml/badge.svg]] [[https://github.com/hephaistox/auto-build/actions/workflows/deploy_clojar.yml][https://github.com/hephaistox/auto-build/actions/workflows/deploy_clojar.yml/badge.svg]] [[https://github.com/hephaistox/auto-build/actions/workflows/pages/pages-build-deployment][https://github.com/hephaistox/auto-build/actions/workflows/pages/pages-build-deployment/badge.svg]]

[[https://clojars.org/org.clojars.hephaistox/auto-build][https://img.shields.io/clojars/v/org.clojars.hephaistox/auto-build.svg]]

[[https://github.com/hephaistox/hephaistox/wiki][https://img.shields.io/badge/wiki-hephaistox-blue.svg]] [[https://github.com/hephaistox/auto-build/wiki][https://img.shields.io/badge/wiki-project-blue.svg]] [[https://github.com/hephaistox/auto-build/discussions][https://img.shields.io/badge/discussions-blue.svg]]
[[https://hephaistox.github.io/auto-build/][https://img.shields.io/badge/detailed-api-blue.svg]]

Automaton build library streamlines the creation, development, testing, and publishing of the automaton and cust-apps projects (see [[https://github.com/hephaistox/hephaistox/wiki][definitions]]).

[[file:docs/img/automaton_small_duck.png]]

#+BEGIN_QUOTE
If every tool, when ordered, or even of its own accord, could do the work that befits it, just as the creations of Daedalus moved of themselves, or the tripods of Hephaestus went of their own accord to their sacred work, if the shuttle would weave and the plectrum touch the lyre without a hand to guide them, master-craftsmen would have no need of assistants and masters no need of slaves ~ Aristotle, Politics 1253b
#+END_QUOTE

* Main features
- Build and deploy clojure as jar and uberjar
- Build and deploy clojurescript with shadow-cljs
- Build API documentation
- Update deps
- Test, lint and format project code
- Standardize repl
- Build message for monorepo
- For cli user interaction, execute commands with feedbacks on the cli with two modes: `heading` for a sequence of tasks organizeed as a tree, `actions` which suits for long lasting actions which feedbacks may be intertwine

* LICENCE
See license information in [[LICENSE.md][Attribution-NonCommercial 4.0 International]]

Copyright Â© 2020-2024 Hephaistox
